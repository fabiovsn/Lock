from ldap3 import Server, Connection, ALL, SIMPLE
import ssl
import getpass

def autenticar_ldap():
    # Configura√ß√µes - ajuste conforme necess√°rio
    SERVIDOR = "ldap://cl.df.gov.br"
    USER_DN = "CN=F√°bio Virg√≠lio de Souza Neves,OU=Users,OU=seinf,OU=cldf,DC=cl,DC=df,DC=gov,DC=br"
    
    try:
        # 1. Verifica√ß√£o b√°sica de conectividade
        print("üîç Verificando conectividade com o servidor LDAP...")
        server = Server(SERVIDOR, get_info=ALL, connect_timeout=10)
        
        # 2. Tentativa de conex√£o an√¥nima para verificar se o servidor est√° respondendo
        try:
            with Connection(server) as conn_anon:
                if conn_anon.bind():
                    print("‚ÑπÔ∏è Servidor responde a conex√µes an√¥nimas")
                    print(f"Informa√ß√µes do servidor: {server.info}")
                else:
                    print("‚ö†Ô∏è Servidor n√£o permite bind an√¥nimo (comportamento esperado)")
        except Exception as e:
            print(f"‚ö†Ô∏è N√£o foi poss√≠vel conectar ao servidor: {str(e)}")
            print("‚û°Ô∏è Verifique:")
            print("- O nome do servidor est√° correto")
            print("- Voc√™ est√° na rede correta")
            print("- O firewall permite conex√µes na porta 389 (LDAP)")
            return False

        # 3. Autentica√ß√£o com credenciais
        print("\nüîë Tentando autentica√ß√£o...")
        senha = getpass.getpass(f"Digite a senha para {USER_DN}: ")
        
        with Connection(server,
                      user=USER_DN,
                      password=senha,
                      authentication=SIMPLE,
                      auto_bind=True) as conn:
            
            if conn.bound:
                print("‚úÖ Autentica√ß√£o bem-sucedida!")
                return True
            else:
                print("‚ùå Falha na autentica√ß√£o")
                return False
                
    except Exception as e:
        print(f"üî• Erro durante a autentica√ß√£o: {str(e)}")
        
        # Diagn√≥stico avan√ßado
        if "invalidCredentials" in str(e):
            print("‚û°Ô∏è Motivo: Credenciais inv√°lidas (usu√°rio ou senha incorretos)")
        elif "strongerAuthRequired" in str(e):
            print("‚û°Ô∏è Motivo: O servidor requer LDAPS (SSL/TLS)")
            print("Tente usar ldaps://cl.df.gov.br:636")
        elif "socket error" in str(e):
            print("‚û°Ô∏è Motivo: Problema de conex√£o com o servidor")
        else:
            print("‚û°Ô∏è Motivo: Desconhecido - verifique logs do servidor LDAP")
        
        return False

if __name__ == "__main__":
    print("=== Sistema de Autentica√ß√£o LDAP ===")
    if autenticar_ldap():
        print("\nAcesso concedido!")
    else:
        print("\nAcesso negado. Recomenda√ß√µes:")
        print("1. Verifique seu nome de usu√°rio e senha")
        print("2. Tente novamente mais tarde")
        print("3. Contate o administrador do sistema")
        print("4. Se necess√°rio, teste com LDAPS (porta 636)")